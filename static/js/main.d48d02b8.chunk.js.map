{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["window","setStatus","text","$","level","numberMoves","board","correctBoard","goodBlocks","row","col","currentRow","currentCol","getMovableBlocks","asText","x","y","possibleMoves","validMoves","move","thisMove","push","map","index","disableAllBlocks","addClass","disableNotMovableBlocks","forEach","selector","removeClass","refreshBoard","moveBlock","number","$oldEmptyBlock","$newEmptyBlock","randomBetween","min","max","Math","floor","random","randomMove","moves","length","id","generateKey","startGame","sleep","a","ms","Promise","resolve","setTimeout","hide","wait","toString","on","ev","$block","target","hasClass","parseInt","attr","goodPositions","show","Block","column","className","data-col","data-row","BlocksRow","items","rowIndex","block","GameBoard","rowsListing","onClick","Game","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d48d02b8.chunk.js","sourcesContent":["import './App.css';\nimport $ from 'jquery';\n\nwindow.setStatus = (text) => {\n  $(\".status\").text(text);\n}\n\nwindow.level = 1;\nwindow.numberMoves = 0;\n\nwindow.board = [\n  [1, 2, 3, 4],\n  [5, 6, 7, 8],\n  [9, 10, 11, 12],\n  [13, 14, 15, 0]\n];\n\n\nwindow.correctBoard = [\n  [1, 2, 3, 4],\n  [5, 6, 7, 8],\n  [9, 10, 11, 12],\n  [13, 14, 15, 0]\n];\n\nwindow.goodBlocks = () => {\n  let goodBlocks = 0;\n  for (var row = 0; row < 4; row++) {\n    for (var col = 0; col < 4; col++) {\n      if(window.board[row][col] === window.correctBoard[row][col]) {\n        goodBlocks += 1;\n      }\n    }\n  }\n\n  return goodBlocks;\n}\n\nwindow.currentRow = 3;\nwindow.currentCol = 3;\nwindow.getMovableBlocks = (asText) => {\n  let x = window.currentRow;\n  let y = window.currentCol;\n\n\n  let possibleMoves = [\n    [x - 1 , y],   // top\n    [x, y + 1],    // right\n    [x + 1, y],    // bottom\n    [x, y - 1]     // left\n  ];\n\n  let validMoves = [];\n\n  for (var move = 0; move < 4; move++) {\n    let thisMove = possibleMoves[move];\n    if (thisMove[0] > -1 && thisMove[0] < 4 && thisMove[1] > -1 && thisMove[1] < 4) {\n      validMoves.push(thisMove);\n    }\n  }\n  if (asText === true) {\n    return validMoves.map((move, index) => {\n      return (\n        \".block.row-\" + move[0] + \".column-\" + move[1]\n      );\n    });\n  } else {\n    return validMoves;\n  }\n}\n\nwindow.disableAllBlocks = () => {\n  $(\".block\").addClass(\"disabled\");\n}\n\nwindow.disableNotMovableBlocks = () => {\n  window.disableAllBlocks();\n  window.getMovableBlocks(true).forEach((selector) => {\n    $(selector).removeClass(\"disabled\");\n  });\n}\n\nwindow.refreshBoard = () => {\n  for (var row = 0; row < 4; row++) {\n    for (var col = 0; col < 4; col++) {\n      $(\".block.row-\" + row + \".column-\" + col).text(window.board[row][col]);\n    }\n  }\n  window.disableNotMovableBlocks();\n}\n\nwindow.moveBlock = (row, col) => {\n  let x = window.currentRow;\n  let y = window.currentCol;\n  let number = window.board[row][col];\n  window.board[x][y] = number;\n  window.currentRow = row;\n  window.currentCol = col;\n  window.board[row][col] = 0;\n  let $oldEmptyBlock = $(\".block.row-\" + x + \".column-\" + y);\n  let $newEmptyBlock = $(\".block.row-\" + row + \".column-\" + col);\n\n  $oldEmptyBlock.removeClass(\"empty\");\n  $newEmptyBlock.addClass(\"empty\");\n\n  window.refreshBoard();\n};\n\nwindow.randomBetween = (min, max) => {\n  // return a random number between min and max\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\nwindow.randomMove = () => {\n  let moves = window.getMovableBlocks(false);\n  let randomPosition = window.randomBetween(0, moves.length - 1);\n  let randomMove = moves[randomPosition];\n\n  window.moveBlock(randomMove[0], randomMove[1]);\n}\n\nwindow.id = 0;\nwindow.generateKey = () => {\n  window.id += 1;\n  return window.id;\n};\n\nwindow.startGame = async () => {\n  function sleep(ms) {\n    return new Promise(resolve => setTimeout(resolve, ms));\n  }\n\n  $(\"button.start-game\").hide();\n  window.disableNotMovableBlocks();\n\n  let wait = 300;\n  window.numberMoves = window.level * 4;\n\n  for (var move = 1; move <= window.numberMoves; move++) {\n    window.setStatus(\"Wait... I prepare it for you. (\" + (window.numberMoves - move).toString() + \")\");\n    await sleep(wait);\n    window.randomMove();\n    if (move < 470) {\n      if (wait > 10) {\n        wait -= 5;\n      }\n    } else {\n      wait += 10;\n    }\n\n    if(window.goodBlocks() === 16) {\n      window.randomMove();  // Make sure it's not already solved. Haha. :))\n    }\n  }\n\n  window.numberMoves = 0;\n  window.setStatus(\"Yeah! You can play now. Click the movable blocks.\");\n\n  $(\".block\").on(\"click\", (ev) => {\n    let $block = $(ev.target);\n\n    if (!$block.hasClass(\"disabled\")) {\n      window.numberMoves += 1;\n      let col = parseInt($block.attr(\"data-col\"));\n      let row = parseInt($block.attr(\"data-row\"));\n      window.moveBlock(row, col);\n\n      let goodPositions = window.goodBlocks();\n      window.setStatus(\"Moves: \" + window.numberMoves + \" Good: \" + goodPositions + \"/16\");\n      if (goodPositions === 16) {\n        $(\"button.start-game\").show();\n        window.level += 1;\n        window.setStatus(\"YEEEES! You are smart! :) Congrats! Moves: \" + window.numberMoves + \" New level: \" + window.level);\n        window.disableAllBlocks();\n      }\n    }\n  });\n}\n\nconst Block = ({number, row, column}) => {\n  return (\n    <div key={window.generateKey()}\n         className={\"block disabled row-\" + row + \" column-\" + column + (number === 0 ? \" empty\" : \"\")}\n         data-col={column} data-row={row}>\n      {number}\n    </div>\n  );\n}\n\n\nconst BlocksRow = ({items, rowIndex}) => {\n  const blocksListing = items.map(function(block, index) {\n    return (\n      <span key={window.generateKey()}>\n        <Block number={block} row={rowIndex} column={index} />\n      </span>\n    );\n  });\n  return(blocksListing)\n}\n\n\nconst GameBoard = () => {\n  const rowsListing = window.board.map(function(row, index) {\n    return (<span key={window.generateKey()}><BlocksRow items={row} rowIndex={index} /></span>);\n  });\n\n  const createBoard = () => {\n    return rowsListing;\n  }\n\n  const startGame = () => {\n    window.startGame();\n  }\n\n  return (\n    <>\n      <div className=\"game-board\">\n        {createBoard()}\n        <button className=\"start-game\" onClick={startGame}>Start</button>\n      </div>\n      <p className=\"status\">Press Start to start the game.</p>\n    </>\n  );\n}\n\n\nconst Game = () => {\n  return (\n    <div className=\"container\">\n      <GameBoard />\n    </div>\n  );\n}\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Game />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}